Welcome to the MultPrinter wiki!
Multiprinter 
The multiprinter control starts on the panel.
 ![Painel](https://github.com/CDASCSI/MultPrinter/blob/master/Imagens/PainelL1800mp.png)
 

Front view panel of the L1800 
  ![Placa Painel](https://github.com/CDASCSI/MultPrinter/blob/master/Imagens/PlacaPainelL1800MP.png)
 


View of the Epson L1800 panel board
![Placa Painel Solda](https://github.com/CDASCSI/MultPrinter/blob/master/Imagens/PlacaPL1800MP.png)

Here we will start modifying our printer to work with mobile control.
As you can see the board has 3 leds, 3 buttons and an on / off switch.
1 Led Power This has two functions
1| indicates whether the printer is turned on;
 2| indicates when the printer is receiving data blinks.
2 Led Paper this has 3 functions
1| if access indicates missing paper
2| works together with a third led and can indicate two other situations
 1 if access indicates general error
 2| If blinking indicates need to reset the cleaning counter
3 Led Ink this has 3 functions as in case of led paper
   1| if access indicates ink is missing, the paper must be off
   2| access and led paper also indicates general error
  3| flashing and led paper also indicates reset
Through the monitoring of these leds the arduino can obtain printer status information.
The on / off switch can be attached to a control relay through an arduino pin.
 ![Relay](https://github.com/CDASCSI/MultPrinter/blob/master/Imagens/ReleMP.png)
 

The Arduino can turn the printer on and off automatically. This type of control can prevent the printer from being damaged in the event of the need to interrupt the printing process.
The first button is below the led paper let's identify it as Button Paper this has two functions:
1 Of paper or paper;
2 When the paper access led is pressed, the paper button indicates that paper has been loaded in the printer (there is a third feature that goes forward).
The second button is Button Ink (ink, droplet).
 1 This button when pressed once causes the carriage to move.
2 If pressed for 3 seconds, it starts the cleaning or ink loading process. 
The third one shows a bin and our Button Trash cancels the printing process.
Our arduino programming logic is part of our knowledge of the operations of this panel. We can start our machine control via cell phone.
We started to define the pins to be used in arduino and the variables needed to control:
#define Led_Power
#define Led_ Paper
#define Led_Ink
#define Power_Printer
#define Paper_Printer
#define InK_Printer
#define Trask_Printer
 In front of each one we must indicate which pin of the arduino will assume the function
In the case of Power_Printer I am using pin 8 of mega arduino data.
#define Power_Printer 8
This pin is defined on a data pin that will work with the logic HIGH and LOW indicates High or Low
In it we will connect a rel, that it activates with the logic LOW and it turns off with HIGH
In arduino setup we have to do two things first and tell him if this pin will be an input pin or an output pin, as it will send a logic level to the relay, it is an output pin or better output.
setup ()

pinMode (Power_Printer, OUTPUT);
let's define that our relay pin, Power_Printer starts in HIGH logic or is off we do this with a filam:
digitalWrite (Power_Printer, HIGH);
For now our printer is off.
Let's create a routine that turns the printer on and off.
void PowerOnOff () {// title of our routine
// define a variable that will check the state of the rel, it must be of type bool or boolean means true or false (HIGH, LOW). Now let's make the arduino pass to this variable the value that is in the Power_Printer pin, we use a digitalRead command line, this is the state of the pin. Remember that in setup we start it in the logical state HIGH.
 statusRele = digitalRead (POWER_PRINTER);
 // here we use a key to see the value of the variable.
  switch (stateRele) {
    case 0: // on
      {// if the state of the relay is LOW, we'll turn it off
        digitalWrite (POWER_PRINTER, HIGH) // turn off
        stateRele = 0; // here it is in the opposite of the pin.
        STATUS_PRINTER = 0; MsgMidia (18); // set another Status_Printer variable to see if it is linked or we do not send a message to know its status
        break; // ends
      }
      break;
    case 1: // off we invert the initial part of our routine so it will work as a button turns on
      {
        digitalWrite (POWER_PRINTER, LOW); // turns on
        stateRele = 1;
        STATUS_PRINTER = 1;
        check_msg_printer ();
        break;
      }
  }
inside deta routine we have two more one send message MsgMidia () and the other check_msg_printer () that will check what message it will pass to us after we check the state of the printer. This is necessary because the printer is not always on and ready to print, sometimes it starts cleaning and still can give some error, so it is necessary to get your data after the relay.


Multiprinter 
O controle da multiprinter começa no painel .
 

Vista de frente painel da L1800  Vista tras painel L1800
 


Luzes
1	 ligar
2	 papel
3	 tinta

Vista da placa do painel Epson L1800
Aqui come‡amos as modificações para nossa impressora para funcionar com controle via celular.
Como podem ver a placa possui 3 leds, 3 botoes e uma chave on/off .
1 Led Power  este tem duas funções 
1¦  indica se a impressora esta ligada ficando acesso ;
 2¦ indica quando a impressora esta recebendo dados fica piscando.
2 Led Paper   este  tem 3 funções  
1¦ se acesso indica falta papel 
2¦ trabalha junto com terceiro led , podendo indicar duas outras situações
 1¦ se acesso indica erro geral
 2¦ se piscando indica necessidade de reset do contador de limpeza
3 Led Ink  este tem 3 fun‡äes  como no casso do led paper
   1¦ se acesso indica falta tinta obs o paper    tem de estar apagado
   2¦  se acesso e o led paper tambem  indica erro geral
  3¦ se piscando e o led paper tambem indica  reset
Atravez do monitoramento destes leds o arduino pode obter informa‡äes do estado da impressora.
A chave liga e desliga  pode ser ligada a um rele via  controle por um pino do arduino.
 
 

O arduino pode ligar e desligar a impressora automaticamente. Este tipo de controle pode impedir que a impressora sofra maiores danos no caso da necessidade de interromper o processo de impressÆo.
O primeiro botÆo esta abaixo do led paper vamos indentificalo como Button Paper  este tem a duas funções :
1 De ejtar o papel; 
2 Quando o led paper acesso se  pressionado  o button paper indica que foi colocado papel na  impressora (existe uma terceira fun‡Æo que fica para mais a frente).
O segundo botÆo e o Button Ink (tinta, a gotinha) . 
 1 Este botÆo ao ser pressionado uma unica vez faz com que o carro se movimente .
2 Se pressionado por 3 segundos ele inicia o processo de limpeza ou carregamento de tinta. 
O terceiro mostra uma lixeira e o nossso Button Trash  ( Cancelar) ele cancela o processo de impressÆo. 
A  nossa logica de programa‡Æo do arduino parte do conhecimento das opera‡äes deste painel .  Podemos iniciar nosso controle da maquina via celular.
Primeiro vamos criar uma serie de variveis que nos dara o status
bool STATE_RELAY; // estado atual do relé 
int STATUS_PRINTER = 0;// O DESLIGADA, 1 LIGADA, 2 IMPRIMINDO,3 PAPEL, 4 TINTA ACABANDO,5 TINTA ACABO,6 RESET, 7 ERRO GERAL 
int STATUS_PAPER = 0;// 0 NORMAL,1 PAPEL ACABO,2 PISCANDO JUNTO INK RESET,3 ACESSO JUNTO INK ERRO GERAL
int STATUS_INK = 0;// 0 NORMAL.1 PISCANDO TINTA ACABANDO,2 ACESSO TINTA ACABOU ,3 PISCANDO JUNTO PAPER RESET, 4 ACESSO JUNTO PAPER ERRO GERAL
int STATUS_TRASH = 0;//0 NORMAL,1 CANCELA IMPRESSÃO

Come‡amos a definir os  pinos a ser usado no arduino e a variaveis necessarias ao controle:
#define Led_Power 
#define Led_Paper
#define Led_Ink
#define Power_Printer
#define Paper_Printer
#define InK_Printer
#define Trask_Printer 
 Na frente de cada um devemos indicar qual o pino do arduino vai assumir a fun‡Æo 
No caso do Power_Printer  estou usando o pino 8 de dados do arduino mega .
#define Power_Printer 8
Este pino esta definido em um pino de dados que vai trabalhar com a logica HIGH e LOW indica Alto ou Baixo 
Nele vamos ligar um relé‚ que aciona com a logica LOW  e desliga com HIGH 
No  setup do arduino temos de fazer duas coisas a primeira e dizer a ele se este pino vai ser um pino de entrada ou de saida, como ele vai enviar um nivel logico para o rele, ele e um pino de saida ou melhor Output.
setup()
pinMode(Power_Printer, OUTPUT);
vamos definir que o nosso pino do rel‚ Power_Printer inicie em logica HIGH ou seja desligado fazemos isto com uma limha :
digitalWrite(Power_Printer,HIGH); 
Por enquanto nossa impressora se encontra desligada .
Vamos criar uma rotina que Liga e desliga a impressora.
void PowerOnOff() { // titulo da nossa rotina
//definimos uma variavel que vai verificar o estado do rel‚  ela deve ser do tipo bool ou boolean significa verdadeiro ou falso (HIGH,LOW). Agora vamos fazer o arduino passar para esta variavel o valor que esta no pino Power_Printer, usamos uma linha de comando digitalRead, esta le o estado do pino. Lembre que no setup iniciamos ela no estado logico HIGH .
 estadoRele = digitalRead(POWER_PRINTER);
 // aqui usamos uma chave para  ver o valor da variavel. 
  switch (estadoRele) {
    case 0: // ligada
      {// caso o estado do rele seja LOW vamos desligalo
        digitalWrite(POWER_PRINTER, HIGH);// desliga
        estadoRele = 0; // aqui ele fica no oposto do pino.
        STATUS_PRINTER = 0; MsgMidia(18);// definimos mais uma variavel Status_Printer para saber se ela esta ligada ou nÆo enviamos uma mensage para saber seu status
        break; // finaliza 
      }
      break;
    case 1: //desligada  invertemos a parte inicial da nossa rotina assim funcionara como um botÆo liga desliga
      {
        digitalWrite(POWER_PRINTER, LOW); // liga
        estadoRele = 1;
        STATUS_PRINTER = 1;
        check_msg_printer();
        break;
      }
  }
dentro deta rotina temos mais duas uma envia mensagem MsgMidia() e a outra check_msg_printer()  que vai verificar qual a mensage ela vai passar para nos apos checar o estado da impressora. Isto e necessario devido a impressora nem sempre  ficar ligada e pronta para imprimir, algumas vezes ela inicia fazendo limpeza e ainda pode dar algun erro, por isto e necessario chegar o seu eatdo apos o rele ligar. 
Esdtavamos programando as primeiras rotinas do Button Power.
par ligar e desligar. Agora vamos verificar o LED Power.

void check_led_power_printer() {
  long duracionledpower = pulseInLong(LED_POWER, HIGH, 10000);
  switch (duracionledpower) {
    case 0: {
        STATUS_PRINTER = 0 ;// se led apagdo impressora desligada
        check_msg_printer();
        break;
      }
    case 1: {
        STATUS_PRINTER = 1 ;// se acesso impressora ligada
        check_msg_printer();
        break;
      }
    default: {
        STATUS_PRINTER = 2 ;// se piscando impressora imprimindo
        check_msg_printer();
        break;
      }
  }
  check_leds_printer();// Verificamos os outros leds se todos desligados impressora pronta 
}

Os outros buttons possui mais de uma rotina vamos para o Paper.
Este se pressionado quando o led esta apagado ele ejecta o papel, se o led estiver acesso informa que nÆo tem papel e necessario pressionar o button para a impressora verificar se foi colocado o papel e dar continuidade ao processo de impressÆo.
A rotina de ligar este e mais simples
void paperonoff() {
   if (STATUS_PRINTER == 1){// verifica o status da impressora se ok 
       if (STATUS_PAPER <= 1 )    
           digitalWrite(PAPER_PRINTER, LOW); aciona o rele do paper 
           delay(5);// apos 
          digitalWrite(PAPER_PRINTER, HIGH);// ela desliga o rele 
        else 
          check_led_Printer();

   }
}

  

